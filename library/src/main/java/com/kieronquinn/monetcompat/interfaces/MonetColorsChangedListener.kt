package com.kieronquinn.monetcompat.interfaces

import com.kieronquinn.monetcompat.core.MonetCompat
import dev.kdrag0n.monet.theme.DynamicColorScheme
import com.kieronquinn.monetcompat.extensions.views.applyMonetRecursively

interface MonetColorsChangedListener {
    /**
     *  Called when Monet's colors change, either from the initial load or when the user changes
     *  wallpaper/configuration. Handle your color changes here, and call [applyMonetRecursively]
     *  to recursively apply Monet colors to specified/supported Views.
     *  @param monet The MonetCompat instance, you can call [MonetCompat.getAccentColor] on this
     *  for example
     *  @param monetColors The full [DynamicColorScheme] generated by Monet to get whatever palettes
     *  you like
     *  @param isInitialChange Whether this call represents the initial load of Monet colors. This
     *  is only true once per instance of [MonetCompat].
     */
    fun onMonetColorsChanged(monet: MonetCompat, monetColors: DynamicColorScheme, isInitialChange: Boolean)
}